<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FB.AspNetCore.Identity.MongoDB" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Core" Version="2.0.1" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Compile Remove="ClientApp\app\modules\lobby\**" />
    <Compile Remove="wwwroot\dist\font-awesome\less\**" />
    <Compile Remove="wwwroot\dist\font-awesome\scss\**" />
    <Content Remove="ClientApp\**" />
    <Content Remove="wwwroot\dist\font-awesome\less\**" />
    <Content Remove="wwwroot\dist\font-awesome\scss\**" />
    <EmbeddedResource Remove="ClientApp\app\modules\lobby\**" />
    <EmbeddedResource Remove="wwwroot\dist\font-awesome\less\**" />
    <EmbeddedResource Remove="wwwroot\dist\font-awesome\scss\**" />
    <None Remove="ClientApp\app\modules\lobby\**" />
    <None Remove="wwwroot\dist\font-awesome\less\**" />
    <None Remove="wwwroot\dist\font-awesome\scss\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\app\app.module.browser.ts" />
    <None Remove="ClientApp\app\app.module.server.ts" />
    <None Remove="ClientApp\app\modules\account\account.module.ts" />
    <None Remove="ClientApp\app\modules\account\account.routes.ts" />
    <None Remove="ClientApp\app\modules\account\index.ts" />
    <None Remove="ClientApp\app\modules\account\login.component.ts" />
    <None Remove="ClientApp\app\modules\account\registration.component.ts" />
    <None Remove="ClientApp\app\modules\navbar\navbar.component.ts" />
    <None Remove="ClientApp\app\_common\guards\auth.guard.ts" />
    <None Remove="ClientApp\app\_common\resolvers\custom-resolvers.ts" />
    <None Remove="ClientApp\app\_common\toastr.helper.ts" />
    <None Remove="ClientApp\app\_common\util\custom-sorters.ts" />
    <None Remove="ClientApp\app\_common\util\custom-validators.ts" />
    <None Remove="ClientApp\app\_common\util\index.ts" />
    <None Remove="ClientApp\app\_model\enum\index.ts" />
    <None Remove="ClientApp\app\_model\interface\IChatMessage.ts" />
    <None Remove="ClientApp\app\_model\interface\IChatRoom.ts" />
    <None Remove="ClientApp\app\_model\interface\ILogin.ts" />
    <None Remove="ClientApp\app\_model\interface\index.ts" />
    <None Remove="ClientApp\app\_model\interface\IOperationResult.ts" />
    <None Remove="ClientApp\app\_model\interface\IRegister.ts" />
    <None Remove="ClientApp\app\_model\interface\ISettings.ts" />
    <None Remove="ClientApp\app\_model\interface\IUser.ts" />
    <None Remove="ClientApp\app\_service\app-init.service.ts" />
    <None Remove="ClientApp\app\_service\auth.service.ts" />
    <None Remove="ClientApp\app\_service\config.service.ts" />
    <None Remove="ClientApp\app\_service\index.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\dist\img\chat-room-bg.jpg">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\dist\img\chat_logo.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\dist\img\msg-status-1.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\dist\img\msg-status-2.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\dist\img\msg-status-3.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\dist\img\msg-status-4.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Chat.Infrastructure\Chat.Infrastructure.csproj" />
    <ProjectReference Include="..\Chat.Repository\Chat.Repository.csproj" />
    <ProjectReference Include="..\Chat.Service\Chat.Service.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\app\modules\account\account.module.ts" />
    <TypeScriptCompile Include="ClientApp\app\modules\account\account.routes.ts" />
    <TypeScriptCompile Include="ClientApp\app\modules\account\index.ts" />
    <TypeScriptCompile Include="ClientApp\app\modules\account\login.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\modules\account\registration.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\modules\navbar\navbar.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\_common\guards\auth.guard.ts" />
    <TypeScriptCompile Include="ClientApp\app\_common\resolvers\custom-resolvers.ts" />
    <TypeScriptCompile Include="ClientApp\app\_common\index.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\enum\chat-room-type.enum.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\enum\chat-message-status.enum.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\enum\index.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\IStatusUpdate.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\IChatMessage.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\IChatRoom.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\ISettings.ts" />
    <TypeScriptCompile Include="ClientApp\app\_service\app-init.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\_service\user.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\_service\blockUI.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\_common\util\custom-helpers.ts" />
    <TypeScriptCompile Include="ClientApp\app\_common\util\toastr.helper.ts" />
    <TypeScriptCompile Include="ClientApp\app\_common\util\custom-sorters.ts" />
    <TypeScriptCompile Include="ClientApp\app\_common\util\custom-validators.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\ILogin.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\index.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\IOperationResult.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\IRegister.ts" />
    <TypeScriptCompile Include="ClientApp\app\_model\interface\IUser.ts" />
    <TypeScriptCompile Include="ClientApp\app\_service\auth.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\_service\chat-message.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\_service\chat-room.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\_service\config.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\_service\index.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\dist\jquery\" />
    <Folder Include="wwwroot\dist\css\" />
    <Folder Include="wwwroot\dist\toastr\" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\dist\css\site.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>